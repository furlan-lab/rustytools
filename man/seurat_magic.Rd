% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/magic.R
\name{seurat_magic}
\alias{seurat_magic}
\title{Run MAGIC diffusion on a Seurat object (Rust backend)}
\usage{
seurat_magic(
  obj,
  assay = "RNA",
  slot = "data",
  t = 3L,
  alpha = 1L,
  k = 30L,
  chunk = 2048L,
  out_slot = c("new_assay", "magic"),
  verbose = TRUE
)
}
\arguments{
\item{obj}{A \code{\link[Seurat]{Seurat}} object.}

\item{assay}{Character(1). Which assay to use (default \code{"RNA"}).}

\item{slot}{Character(1). Which data slot within the assay:
\code{"counts"}, \code{"data"}, or \code{"scale.data"} (default \code{"data"}).}

\item{t}{Integer(1). Diffusion time (number of steps, default \code{3}).}

\item{alpha}{Numeric(1) interpolation weight in \link{0,1}}

\item{k}{Integer(1). Number of neighbors to use if no graph exists (default \code{30}).}

\item{chunk}{Integer(1). Number of gene-columns per block in the Rust kernel
(trades memory vs speed; default \code{2048}).}

\item{out_slot}{Character(1). Where to store the result:
\code{"magic"} (adds to \code{@misc$magic} in the same assay) or
\code{"new_assay"} (creates a new assay named \code{"MAGIC"}). Default is \code{"magic"}.}

\item{verbose}{Logical(1). Whether to print progress messages (default \code{TRUE}).}
}
\value{
The input Seurat object, with a new imputed matrix stored according to \code{out_slot}.
}
\description{
This function wraps the Rust-based MAGIC diffusion kernel (\code{diffuse_expr_r})
and seamlessly integrates it into a Seurat workflow. It will extract a sparse
expression matrix from your chosen assay/slot, build or reuse a k-NN graph,
row-normalize it to form a transition matrix, run diffusion for \code{t} steps,
and store the imputed values back into your Seurat object.
}
\examples{
\dontrun{
library(Seurat)
so <- CreateSeuratObject(counts = my_counts)
so <- NormalizeData(so)
so <- seurat_magic(so, assay = "RNA", slot = "data", t = 3, k = 30)
}

}
